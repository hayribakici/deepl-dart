// Copyright (c) 2024, hayribakici. All rights reserved. Use of this source code
// is governed by a BSD-style license that can be found in the LICENSE file.

// ignore_for_file: constant_identifier_names

part of '_models.dart';

@JsonSerializable()
class Language {
  @JsonKey(name: 'language')
  GlossaryLanguage languageCode;
  String name;
  @JsonKey(name: 'supports_formality')
  bool supportsFormality;

  Language(
      {required this.languageCode,
      required this.name,
      this.supportsFormality = false});

  Map<String, dynamic> toJson() => _$LanguageToJson(this);
}

@JsonSerializable(createToJson: false)
class LanguagePair {
  LanguagePair();

  factory LanguagePair.create(
      GlossaryLanguage source, GlossaryLanguage target) {
    return LanguagePair()
      ..source = source
      ..target = target;
  }

  @JsonKey(name: 'source_lang', unknownEnumValue: GlossaryLanguage.unknown)
  GlossaryLanguage? source;
  @JsonKey(name: 'target_lang', unknownEnumValue: GlossaryLanguage.unknown)
  GlossaryLanguage? target;

  factory LanguagePair.fromJson(Map<String, dynamic> json) =>
      _$LanguagePairFromJson(json);
}

enum SourceLanguage {
  BG,
  CS,
  DA,
  DE,
  EL,
  EN,
  ES,
  ET,
  FI,
  FR,
  HU,
  ID,
  IT,
  JA,
  KO,
  LT,
  LV,
  NB,
  NL,
  PL,
  PT,
  RO,
  RU,
  SK,
  SL,
  SV,
  TR,
  UK,
  ZH,
  unknown
}

enum TargetLanguage {
  AR,
  BG,
  CS,
  DA,
  DE,
  EL,
  EN_GB,
  EN_US,
  ES,
  ET,
  FI,
  FR,
  HU,
  ID,
  IT,
  JA,
  KO,
  LT,
  LV,
  NB,
  NL,
  PL,
  PT_BR,
  PT_PT,
  RO,
  RU,
  SK,
  SL,
  SV,
  TR,
  UK,
  ZH,
  ZH_HANS,
  ZH_HANT,
  unknown
}

// Copyright (c) 2019-2021, Denis Portnov. All rights reserved.
enum LanguageCode {
  AD,
  AE,
  AF,
  AG,
  AI,
  AL,
  AM,
  AO,
  AQ,
  AR,
  AS,
  AT,
  AU,
  AW,
  AX,
  AZ,
  BA,
  BB,
  BD,
  BE,
  BF,
  BG,
  BH,
  BI,
  BJ,
  BL,
  BM,
  BN,
  BO,
  BQ,
  BR,
  BS,
  BT,
  BV,
  BW,
  BY,
  BZ,
  CA,
  CC,
  CD,
  CF,
  CG,
  CH,
  CI,
  CK,
  CL,
  CM,
  CN,
  CO,
  CR,
  CU,
  CV,
  CW,
  CX,
  CY,
  CZ,
  DA, // Danish
  DE,
  DJ,
  DK,
  DM,
  DO,
  DZ,
  EC,
  EE,
  EG,
  EH,
  EN, // English
  ER,
  ES,
  ET,
  FI,
  FJ,
  FK,
  FM,
  FO,
  FR,
  GA,
  GB,
  GD,
  GE,
  GF,
  GG,
  GH,
  GI,
  GL,
  GM,
  GN,
  GP,
  GQ,
  GR,
  GS,
  GT,
  GU,
  GW,
  GY,
  HK,
  HM,
  HN,
  HR,
  HT,
  HU,
  ID,
  IE,
  IL,
  IM,
  IN,
  IO,
  IQ,
  IR,
  IS,
  IT,
  JA, // Japanese
  JE,
  JM,
  JO,
  JP, // Japanese
  KE,
  KG,
  KH,
  KI,
  KM,
  KN,
  KO, // Korean
  KP,
  KR,
  KW,
  KY,
  KZ,
  LA,
  LB,
  LC,
  LI,
  LK,
  LR,
  LS,
  LT,
  LU,
  LV,
  LY,
  MA,
  MC,
  MD,
  ME,
  MF,
  MG,
  MH,
  MK,
  ML,
  MM,
  MN,
  MO,
  MP,
  MQ,
  MR,
  MS,
  MT,
  MU,
  MV,
  MW,
  MX,
  MY,
  MZ,
  NA,
  NB, // (Norwegian Bokm√•l)
  NC,
  NE,
  NF,
  NG,
  NI,
  NL,
  NO,
  NP,
  NR,
  NU,
  NZ,
  OM,
  PA,
  PE,
  PF,
  PG,
  PH,
  PK,
  PL,
  PM,
  PN,
  PR,
  PS,
  PT,
  PW,
  PY,
  QA,
  RE,
  RO,
  RS,
  RU,
  RW,
  SA,
  SB,
  SC,
  SD,
  SE,
  SG,
  SH,
  SI,
  SJ,
  SK,
  SL,
  SM,
  SN,
  SO,
  SR,
  SS,
  ST,
  SV,
  SX,
  SY,
  SZ,
  TC,
  TD,
  TF,
  TG,
  TH,
  TJ,
  TK,
  TL,
  TM,
  TN,
  TO,
  TR,
  TT,
  TV,
  TW,
  TZ,
  UA,
  UG,
  UM,
  US,
  UY,
  UZ,
  VA,
  VC,
  VE,
  VG,
  VI,
  VN,
  VU,
  WF,
  WS,
  XK,
  YE,
  YT,
  ZA,
  ZH, // Chinese
  ZM,
  ZW,
  unknown
}
